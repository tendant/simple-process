package contracts

// Job represents the data contract for a unit of work.
// It contains all the information needed for a UoW to process a file.
type Job struct {
	Version      string            `json:"version"`
	JobID        string            `json:"job_id"`
	UoW          string            `json:"uow"`
	File         File              `json:"file"`
	PresignedGet string            `json:"presigned_get"`
	Return       Return            `json:"return"`
	IdemKey      string            `json:"idem_key"`
	Hints        map[string]string `json:"hints"`
}

// File represents the file to be processed.
// It includes metadata and blob information.
type File struct {
	ID         string                 `json:"id"`
	TenantID   string                 `json:"tenant_id"`
	OwnerID    string                 `json:"owner_id"`
	Name       string                 `json:"name"`
	Blob       Blob                   `json:"blob"`
	Attributes map[string]interface{} `json:"attributes"`
}

// Blob represents the location and size of the file blob.
type Blob struct {
	Location string `json:"location"`
	Size     int64  `json:"size"`
}

// Return specifies where the result of the UoW should be sent.
type Return struct {
	Type string `json:"type"`
	URL  string `json:"url"`
}

// Result represents the data contract for the output of a unit of work.
// It includes any patched attributes and a list of generated artifacts.
type Result struct {
	JobID           string                 `json:"job_id"`
	UoW             string                 `json:"uow"`
	FileID          string                 `json:"file_id"`
	AttributesPatch map[string]interface{} `json:"attributes_patch"`
	Artifacts       []Artifact             `json:"artifacts"`
}

// Artifact represents a file or data generated by a UoW.
// It includes metadata about the artifact and its location.
type Artifact struct {
	Kind     string `json:"kind"`
	MIME     string `json:"mime"`
	Bytes    int64  `json:"bytes"`
	Location string `json:"location"`
}

